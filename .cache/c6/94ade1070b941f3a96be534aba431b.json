{"id":"main.js","dependencies":[{"name":"C:\\Users\\jhfru\\Desktop\\regexp\\package.json","includedInParent":true,"mtime":1648446650955}],"generated":{"js":"// const str = `\n// 010-1234-5678.\n// thesecon@gmail.com\n// https://www.google.com\n// The quick brown fox jumps over the lazy dog.\n// aabbcccccccdddd\n// htxp\n// http://localhost:1234\n// 동해물과_백두산이 마르고 닳도록`\n// const regexp = new RegExp('the','gi')\n// const regexp = /the/gi\n// console.log(str.match(regexp))\n// const regexp = /fox/gi\n// // console.log(regexp.test(str))\n// console.log(str.match(regexp))\n// const regexp = /the/gi\n// console.log(str.match(regexp))\n//위 내용을  아래와 같이 써도 무방하다.변수없이.\n//\n// console.log(str.match(/\\.$/gim))   \n//(\\.) 마침표가 일반 문자로 해석되라\n//$ 는 꼭 마침표 . 뒤에 붙여야함.\n//\\.$ = $사인 을 붙이게되면 마침표로 끝나는 부분을 일치시켜라 라는의미.\n//. 로 마치는 부분이있으면 그부분을 나타내는 것.\n//============================================================\n//표현\n// console.log(\n//     str.match(/^T/gm)\n//     )   \n// console.log(\n//     str.match(/fox|dog/)\n//     )   //위치를 바꾸어도 둘중 먼저 찾아진는것이 표현됨 / g가 있으면 다 나옴..\n// console.log(\n//     str.match(/https?/g)\n//     )\n// console.log(\n//     str.match(/\\b\\w{2,3}\\b/g)\n//     )\n//w 는 숫자를 포함한 영어 알파벳을의미.\n// \\b 는 숫자나 알파벳이 아닌경우를 경계를 하는것을 의미.\n// console.log(\n//     str.match(/\\w/g)    \n// )\n// console.log(\n//         str.match(/\\bf\\w{1,}\\b/g)    \n//     ) //소문자 f로 시작하는 영단어를찾는 패턴이됨.\n// console.log(\n//         str.match(/\\d{1,}/g)    \n//     ) //숫자가 한개이상.\n// console.log(\n//     str.match(/\\s/g)    \n// ) //공백부분\n// const h = `  the hello    world    !`\n// console.log(\n//     h.replace(/\\s/g,'')\n// ) //공백 사라짐\n// ==============================================================\nvar str = \"\\n010-1234-5678.\\nthesecon@gmail.com\\nhttps://www.google.com\\nThe quick brown fox jumps over the lazy dog.\\naabbcccccccdddd\\nhtxp\\nhttp://localhost:1234\\n\\uB3D9\\uD574\\uBB3C\\uACFC_\\uBC31\\uB450\\uC0B0\\uC774 \\uB9C8\\uB974\\uACE0 \\uB2F3\\uB3C4\\uB85D\"; // console.log(\n//     str.match(/.{1,}(?=@)/g)\n// )\n\nconsole.log(str.match(/(?<=@).{1,}/g));"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"main.js","original":{"line":1,"column":0}},{"generated":{"line":2,"column":0},"source":"main.js","original":{"line":2,"column":0}},{"generated":{"line":3,"column":0},"source":"main.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"main.js","original":{"line":4,"column":0}},{"generated":{"line":5,"column":0},"source":"main.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"main.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"main.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"main.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"main.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"main.js","original":{"line":12,"column":0}},{"generated":{"line":11,"column":0},"source":"main.js","original":{"line":13,"column":0}},{"generated":{"line":12,"column":0},"source":"main.js","original":{"line":15,"column":0}},{"generated":{"line":13,"column":0},"source":"main.js","original":{"line":18,"column":0}},{"generated":{"line":14,"column":0},"source":"main.js","original":{"line":19,"column":0}},{"generated":{"line":15,"column":0},"source":"main.js","original":{"line":21,"column":0}},{"generated":{"line":16,"column":0},"source":"main.js","original":{"line":24,"column":0}},{"generated":{"line":17,"column":0},"source":"main.js","original":{"line":25,"column":0}},{"generated":{"line":18,"column":0},"source":"main.js","original":{"line":27,"column":0}},{"generated":{"line":19,"column":0},"source":"main.js","original":{"line":28,"column":0}},{"generated":{"line":20,"column":0},"source":"main.js","original":{"line":29,"column":0}},{"generated":{"line":21,"column":0},"source":"main.js","original":{"line":30,"column":0}},{"generated":{"line":22,"column":0},"source":"main.js","original":{"line":32,"column":0}},{"generated":{"line":23,"column":0},"source":"main.js","original":{"line":33,"column":0}},{"generated":{"line":24,"column":0},"source":"main.js","original":{"line":34,"column":0}},{"generated":{"line":25,"column":0},"source":"main.js","original":{"line":36,"column":0}},{"generated":{"line":26,"column":0},"source":"main.js","original":{"line":37,"column":0}},{"generated":{"line":27,"column":0},"source":"main.js","original":{"line":39,"column":0}},{"generated":{"line":28,"column":0},"source":"main.js","original":{"line":40,"column":0}},{"generated":{"line":29,"column":0},"source":"main.js","original":{"line":41,"column":0}},{"generated":{"line":30,"column":0},"source":"main.js","original":{"line":44,"column":0}},{"generated":{"line":31,"column":0},"source":"main.js","original":{"line":45,"column":0}},{"generated":{"line":32,"column":0},"source":"main.js","original":{"line":46,"column":0}},{"generated":{"line":33,"column":0},"source":"main.js","original":{"line":49,"column":0}},{"generated":{"line":34,"column":0},"source":"main.js","original":{"line":50,"column":0}},{"generated":{"line":35,"column":0},"source":"main.js","original":{"line":51,"column":0}},{"generated":{"line":36,"column":0},"source":"main.js","original":{"line":54,"column":0}},{"generated":{"line":37,"column":0},"source":"main.js","original":{"line":55,"column":0}},{"generated":{"line":38,"column":0},"source":"main.js","original":{"line":56,"column":0}},{"generated":{"line":39,"column":0},"source":"main.js","original":{"line":57,"column":0}},{"generated":{"line":40,"column":0},"source":"main.js","original":{"line":58,"column":0}},{"generated":{"line":41,"column":0},"source":"main.js","original":{"line":60,"column":0}},{"generated":{"line":42,"column":0},"source":"main.js","original":{"line":61,"column":0}},{"generated":{"line":43,"column":0},"source":"main.js","original":{"line":62,"column":0}},{"generated":{"line":44,"column":0},"source":"main.js","original":{"line":65,"column":0}},{"generated":{"line":45,"column":0},"source":"main.js","original":{"line":66,"column":0}},{"generated":{"line":46,"column":0},"source":"main.js","original":{"line":67,"column":0}},{"generated":{"line":47,"column":0},"source":"main.js","original":{"line":71,"column":0}},{"generated":{"line":48,"column":0},"source":"main.js","original":{"line":72,"column":0}},{"generated":{"line":49,"column":0},"source":"main.js","original":{"line":73,"column":0}},{"generated":{"line":50,"column":0},"source":"main.js","original":{"line":76,"column":0}},{"generated":{"line":51,"column":0},"source":"main.js","original":{"line":77,"column":0}},{"generated":{"line":52,"column":0},"source":"main.js","original":{"line":78,"column":0}},{"generated":{"line":53,"column":0},"source":"main.js","original":{"line":81,"column":0}},{"generated":{"line":54,"column":0},"source":"main.js","original":{"line":83,"column":0}},{"generated":{"line":55,"column":0},"source":"main.js","original":{"line":84,"column":0}},{"generated":{"line":56,"column":0},"source":"main.js","original":{"line":85,"column":0}},{"generated":{"line":57,"column":0},"source":"main.js","original":{"line":87,"column":0}},{"generated":{"line":58,"column":0},"source":"main.js","original":{"line":89,"column":0}},{"name":"str","generated":{"line":58,"column":4},"source":"main.js","original":{"line":89,"column":6}},{"generated":{"line":58,"column":7},"source":"main.js","original":{"line":89,"column":9}},{"generated":{"line":58,"column":253},"source":"main.js","original":{"line":89,"column":0}},{"generated":{"line":58,"column":255},"source":"main.js","original":{"line":100,"column":0}},{"generated":{"line":59,"column":0},"source":"main.js","original":{"line":101,"column":0}},{"generated":{"line":60,"column":0},"source":"main.js","original":{"line":102,"column":0}},{"name":"console","generated":{"line":62,"column":0},"source":"main.js","original":{"line":104,"column":0}},{"generated":{"line":62,"column":7},"source":"main.js","original":{"line":104,"column":7}},{"name":"log","generated":{"line":62,"column":8},"source":"main.js","original":{"line":104,"column":8}},{"generated":{"line":62,"column":11},"source":"main.js","original":{"line":104,"column":0}},{"name":"str","generated":{"line":62,"column":12},"source":"main.js","original":{"line":105,"column":8}},{"generated":{"line":62,"column":15},"source":"main.js","original":{"line":105,"column":11}},{"name":"match","generated":{"line":62,"column":16},"source":"main.js","original":{"line":105,"column":12}},{"generated":{"line":62,"column":21},"source":"main.js","original":{"line":105,"column":8}},{"generated":{"line":62,"column":22},"source":"main.js","original":{"line":105,"column":18}},{"generated":{"line":62,"column":36},"source":"main.js","original":{"line":105,"column":8}},{"generated":{"line":62,"column":37},"source":"main.js","original":{"line":104,"column":0}}],"sources":{"main.js":"// const str = `\r\n// 010-1234-5678.\r\n// thesecon@gmail.com\r\n// https://www.google.com\r\n// The quick brown fox jumps over the lazy dog.\r\n// aabbcccccccdddd\r\n// htxp\r\n// http://localhost:1234\r\n// 동해물과_백두산이 마르고 닳도록`\r\n\r\n\r\n// const regexp = new RegExp('the','gi')\r\n// const regexp = /the/gi\r\n\r\n// console.log(str.match(regexp))\r\n\r\n\r\n// const regexp = /fox/gi\r\n// // console.log(regexp.test(str))\r\n\r\n// console.log(str.match(regexp))\r\n\r\n\r\n// const regexp = /the/gi\r\n// console.log(str.match(regexp))\r\n\r\n//위 내용을  아래와 같이 써도 무방하다.변수없이.\r\n//\r\n// console.log(str.match(/\\.$/gim))   \r\n//(\\.) 마침표가 일반 문자로 해석되라\r\n\r\n//$ 는 꼭 마침표 . 뒤에 붙여야함.\r\n//\\.$ = $사인 을 붙이게되면 마침표로 끝나는 부분을 일치시켜라 라는의미.\r\n//. 로 마치는 부분이있으면 그부분을 나타내는 것.\r\n\r\n//============================================================\r\n//표현\r\n\r\n// console.log(\r\n//     str.match(/^T/gm)\r\n//     )   \r\n\r\n\r\n// console.log(\r\n//     str.match(/fox|dog/)\r\n//     )   //위치를 바꾸어도 둘중 먼저 찾아진는것이 표현됨 / g가 있으면 다 나옴..\r\n\r\n\r\n// console.log(\r\n//     str.match(/https?/g)\r\n//     )\r\n\r\n\r\n// console.log(\r\n//     str.match(/\\b\\w{2,3}\\b/g)\r\n//     )\r\n//w 는 숫자를 포함한 영어 알파벳을의미.\r\n// \\b 는 숫자나 알파벳이 아닌경우를 경계를 하는것을 의미.\r\n\r\n// console.log(\r\n//     str.match(/\\w/g)    \r\n// )\r\n\r\n\r\n// console.log(\r\n//         str.match(/\\bf\\w{1,}\\b/g)    \r\n//     ) //소문자 f로 시작하는 영단어를찾는 패턴이됨.\r\n    \r\n\r\n\r\n// console.log(\r\n//         str.match(/\\d{1,}/g)    \r\n//     ) //숫자가 한개이상.\r\n    \r\n\r\n// console.log(\r\n//     str.match(/\\s/g)    \r\n// ) //공백부분\r\n\r\n\r\n// const h = `  the hello    world    !`\r\n\r\n// console.log(\r\n//     h.replace(/\\s/g,'')\r\n// ) //공백 사라짐\r\n\r\n// ==============================================================\r\n\r\nconst str = `\r\n010-1234-5678.\r\nthesecon@gmail.com\r\nhttps://www.google.com\r\nThe quick brown fox jumps over the lazy dog.\r\naabbcccccccdddd\r\nhtxp\r\nhttp://localhost:1234\r\n동해물과_백두산이 마르고 닳도록`\r\n\r\n\r\n// console.log(\r\n//     str.match(/.{1,}(?=@)/g)\r\n// )\r\n\r\nconsole.log(\r\n        str.match(/(?<=@).{1,}/g)\r\n    )"},"lineCount":null}},"error":null,"hash":"eef53c75de76b824fc232a1ee82cd7e1","cacheData":{"env":{}}}